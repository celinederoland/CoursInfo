\titre{Le programme Hello Word} voir \textbf{hello.cpp} \\

\titre{Variables en c++} Identique à C pour l'allocation statique \\

\titre{Pointeurs et tableaux} Identique à C, voir \textbf{echange.c} et \textbf{tableau.c} \\

\titre{Références} voir \textbf{ref.c}, \textbf{swapref.c}, \textbf{constref.c} \\
Une référence en C++ est un alias pour une autre variable. On donne un autre nom à une variable qui existe déjà. \\
On s'en sert essentiellement pour des passages de paramètres.\\
On utilise aussi les références pour :
\begin{itemize}
	\item alias d'une variable contenue dans une structure plus complexe
	\item donnée membre de classe
	\item valeur de retour de méthode
	\item désigner un alias constant à une autre variable, en particulier dans le passage de paramètre en entrée.
\end{itemize}

\titre{Fonctions} voir \textbf{foncmin.c} \\ Les déclarations et définitions des fonctions suit les principes du C, avec en plus la possibilité de surcharger. \\

\titre{Structures et classes} voir \textbf{personne.c} \\
	Le C++ offre le moyen de définir des types complexes en agrégeant les autres types via les struct (éléments publiques) et les class (éléments privés). On peut définir des méthodes pour les classes, des fonctions membres pour les struct. \\
	Déclarations possibles dans le fichier d'entête (.h, .H, .hpp, .hh, .hxx, .h++).\\
	Définitions dans le fichier source (.cpp, .C, .cxx, .cc, .c++, .C++).\\
	On peut aussi tout écrire dans le fichier entête (utile en programmation générique).\\

\titre{E
